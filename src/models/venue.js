const mongoose = require("mongoose");
const Schema = mongoose.Schema;

const VenueSchema = new Schema({
  venue_name: { type: String, required: true, maxlength: 100, default: null },
  email: { type: String, required: true, maxlength: 100, default: null },
  password: { type: String, required: true, maxlength: 50, default: null },
  phone_number: { type: String, required: true, maxlength: 20, default: null },
  address: { type: String, required: true, default: null },
  postcode: { type: String, required: true, maxlength: 20, default: null },
  bio: { type: String, default: null },
  country: {
    type: String,
    required: true,
    maxlength: 50,
    default: null,
    enum: ["England", "Wales", "Scotland", "Northern Ireland"],
  },
  county: {
    type: String,
    required: true,
    maxlength: 100,
    default: null,
    enum: [
      "Bedfordshire",
      "Berkshire",
      "Bristol",
      "Buckinghamshire",
      "Cambridgeshire",
      "Cheshire",
      "Cornwall",
      "Cumbria",
      "Derbyshire",
      "Devon",
      "Dorset",
      "Durham",
      "East Sussex",
      "Essex",
      "Gloucestershire",
      "Greater London",
      "Greater Manchester",
      "Hampshire",
      "Herefordshire",
      "Hertfordshire",
      "Isle of Wight",
      "Kent",
      "Lancashire",
      "Leicestershire",
      "Lincolnshire",
      "Merseyside",
      "Norfolk",
      "North Yorkshire",
      "Northamptonshire",
      "Northumberland",
      "Nottinghamshire",
      "Oxfordshire",
      "Rutland",
      "Shropshire",
      "Somerset",
      "South Yorkshire",
      "Staffordshire",
      "Suffolk",
      "Surrey",
      "Tyne and Wear",
      "Warwickshire",
      "West Midlands",
      "West Sussex",
      "West Yorkshire",
      "Wiltshire",
      "Worcestershire",
      "Blaenau Gwent",
      "Bridgend",
      "Caerphilly",
      "Cardiff",
      "Carmarthenshire",
      "Ceredigion",
      "Conwy",
      "Denbighshire",
      "Flintshire",
      "Gwynedd",
      "Isle of Anglesey",
      "Merthyr Tydfil",
      "Monmouthshire",
      "Neath Port Talbot",
      "Newport",
      "Pembrokeshire",
      "Powys",
      "Rhondda Cynon Taff",
      "Swansea",
      "Torfaen",
      "Vale of Glamorgan",
      "Wrexham",
      "Aberdeen City",
      "Aberdeenshire",
      "Angus",
      "Argyll and Bute",
      "Clackmannanshire",
      "Dumfries and Galloway",
      "Dundee City",
      "East Ayrshire",
      "East Dunbartonshire",
      "East Lothian",
      "East Renfrewshire",
      "Edinburgh",
      "Falkirk",
      "Fife",
      "Glasgow",
      "Highland",
      "Inverclyde",
      "Midlothian",
      "Moray",
      "Na h-Eileanan Siar",
      "North Ayrshire",
      "North Lanarkshire",
      "Orkney Islands",
      "Perth and Kinross",
      "Renfrewshire",
      "Scottish Borders",
      "Shetland Islands",
      "South Ayrshire",
      "South Lanarkshire",
      "Stirling",
      "West Dunbartonshire",
      "West Lothian",
      "Antrim",
      "Armagh",
      "Down",
      "Fermanagh",
      "Londonderry",
      "Tyrone",
    ],
  },
  image: { type: String, default: null },
  genre: {
    type: String,
    required: true,
    maxlength: 100,
    default: null,
    enum: [
      "Rock",
      "Pop",
      "Jazz",
      "Country",
      "Hip Hop",
      "R&B",
      "Electronic",
      "Classical",
      "Reggae",
      "Metal",
      "Folk",
      "Blues",
      "World Music",
    ],
  },
  type_of_act: {
    type: String,
    required: true,
    maxlength: 100,
    default: null,
    enum: ["Original Music", "Covers", "Both"],
  },
  user_type: {
    type: String,
    required: true,
    maxlength: 50,
    default: null,
    enum: ["Artist", "Venue"],
  },
  artist_type: {
    type: String,
    required: true,
    maxlength: 100,
    default: null,
    enum: ["Full band", "Solo artist", "Duo"],
  },
  facebook: { type: String, maxlength: 200, default: null },
  twitter: { type: String, maxlength: 200, default: null },
  youtube: { type: String, maxlength: 200, default: null },
  venue_membership_type: { type: Number, required: true, default: null },
  is_approved: {
    type: String,
    required: true,
    default: "Under review",
    enum: ["Under review", "Unapproved", "Approved"],
  },
  status: {
    type: String,
    required: true,
    default: "Active",
    enum: ["Active", "Transferred", "Past"],
  },
  notifications: {
    type: [String],
    enum: [
      "GIG_TRANSFER",
      "VENUE_ADVERTISED_GIG",
      "GENERAL_GIGSWEEP_UPDATES",
      "TEST",
    ],
    default: [],
  },
});

const Venue = mongoose.model("Venue", VenueSchema);

module.exports = Venue;
